openapi: 3.0.2
info:
  title: ndis_calculator
  version: 1.0.1
servers:
  - url: http://localhost:8000/api/v1
    description: Development server (local)

paths:
  /plans:
    get:
      security:
        - JWT: []
      tags:
        - plan
      summary: Retrieve all plans of the request's participant
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Plan"
                    - type: object
                      properties:
                        id:
                          type: integer
                        planCategories:
                          type: array
                          items:
                            allOf:
                              - $ref: "#/components/schemas/PlanCategory"
                              - type: object
                                properties:
                                  id:
                                    type: integer
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorised"

    post:
      security:
        - JWT: []
      tags:
        - plan
      summary: Create a plan
      description: Create a plan from start date, end date and a budgets array where each element is an array in the form of (supportCategoryId, budget)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Plan'
                - type: object
                  properties:
                    supportCategories:
                      type: array
                      items:
                        type: object
                        properties:
                          supportCategory:
                            type: integer
                          budget:
                            type: number

      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Plan"
                  - type: object
                    properties:
                      id:
                        type: integer
                      planCategories:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/PlanCategory"
                            - type: object
                              properties:
                                id:
                                  type: integer
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorised"

  /plans/{plan_id}:
    patch:
      security:
        - JWT: []
      tags:
        - plan
      summary: Update a single plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Plan'
                - type: object
                  properties:
                    planCategories:
                      type: array
                      items:
                        type: object
                        properties:
                          planCategory:
                            type: integer
                          budget:
                            type: number
      parameters:
        - $ref: "#/components/parameters/PlanId"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Plan"
                  - type: object
                    properties:
                      id:
                        type: integer
                      planCategories:
                        type: array
                        items:
                          $ref: "#/components/schemas/PlanCategory"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorised"
        "404":
          $ref: '#/components/responses/NotFound'


  /registration-groups:
    get:
      tags:
        - registration group
      summary: Retrieves list of registration groups
      description: Retrieves all registration groups
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RegistrationGroup"

  /support-groups:
    get:
      tags:
        - support group
      summary: Retrieves list of support groups and their support categories
      description: Retrieves list of support groups and their support categories in database order
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SupportGroup"

  /support-items:
    get:
      tags:
        - support item
      summary: Retrieves list of support items
      description: Retrieves list of support items based on filter. The backend will retrieve the appropriate price based on the postcode.
      parameters:
        - name: birth-year
          in: query
          schema:
            type: integer
          required: true
        - name: postcode
          in: query
          schema:
            type: integer
          required: true
        - name: registration-group-id
          in: query
          schema:
            type: integer
        - name: support-category-id
          in: query
          required: true
          schema:
            type: integer

      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SupportItemGroup"

  /support-item-groups:
    get:
      tags:
        - support item group
      summary: Retrieves list of support item groups (more simple english, less clutter than support_item)
      description: Retrieves list of support item groups based on filter, The backend will retrieve the default national price for simplicity
      parameters:
        - name: registration-group-id
          in: query
          schema:
            type: integer
          required: true
        - name: support-group-id
          in: query
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SupportItem"

  /plan-categories/{plan_category_id}/plan-items:
    get:
      security:
        - JWT: []
      tags:
        - plan item
      summary: Retrieve all plan items from a plan category
      parameters:
        - $ref: "#/components/parameters/PlanCategoryId"
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PlanItem"
                properties:
                  id:
                    type: integer
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorised"
        "404":
          $ref: '#/components/responses/NotFound'

    post:
      security:
        - JWT: []
      tags:
        - plan item
      summary: Create a plan item in a plan category
      parameters:
        - $ref: "#/components/parameters/PlanCategoryId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlanItem"
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PlanItem"
                properties:
                  id:
                    type: integer
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorised"
        "404":
          $ref: '#/components/responses/NotFound'

  /plan-items/{plan_item_id}:
    delete:
      security:
      - JWT: []
      tags:
        - plan item
      summary: Delete a plan item
      parameters:
        - $ref: "#/components/parameters/PlanItemId"
      responses:
        "204":
          $ref: '#/components/responses/NoContent'
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorised"
        "404":
          $ref: '#/components/responses/NotFound'
    patch:
      security:
        - JWT: []
      tags:
        - plan item
      summary: Update a plan item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                quantity:
                  type: number
                  example: 10
                priceActual:
                  type: number
                  example: 120.22
                name:
                  type: string
                  example: wheelchair
                frequencyPerYear:
                  type: integer
                  example: 52

      parameters:
        - $ref: "#/components/parameters/PlanItemId"
      responses:
        "204":
          $ref: '#/components/responses/NoContent'
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/Unauthorised"
        "404":
          $ref: '#/components/responses/NotFound'




components:
  schemas:
    SupportGroup:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Capital"
        supportCategories:
          type: array
          items:
            $ref: "#/components/schemas/SupportCategory"

    SupportCategory:
      type: object
      properties:
        id:
          type: integer
          example: 16
        name:
          type: string
          example: Improved life choices

    SupportItem:
      type: object
      properties:
        id:
          type: integer
          example: 717
        number:
          type: string
          example: "15_001_0118_1_3"
        name:
          type: string
          example: Capacity Building Supports For Early Childhood Interventions - Psychology
        description:
          type: string
          example: Capacity building supports, including key worker, to assist a child with developmental delay and/or disability and their family/carers in home, community and early childhood education settings, to work towards increased functional independence and social participation. To be delivered by a Psychologist.
        unit:
          type: string
          example: H
        price:
          type: number
          example: 243.83

    SupportItemGroup:
      type: object
      properties:
        id:
          type: integer
          example: 717
        name:
          type: string
          example: Capacity Building Supports For Early Childhood Interventions - Psychology
        description:
          type: string
          example: Capacity building supports, including key worker, to assist a child with developmental delay and/or disability and their family/carers in home, community and early childhood education settings, to work towards increased functional independence and social participation. To be delivered by a Psychologist.
        unit:
          type: string
          example: H
        price:
          type: number
          example: 243.83

    RegistrationGroup:
      type: object
      properties:
        id:
          type: integer
          example: 41
        name:
          type: string
          example: "Early Intervention Supports For Early Childhood"

    Plan:
      type: object
      properties:
        startDate:
          type: string
          example: 01/01/2019
        endDate:
          type: string
          example: 02/01/2019

    PlanCategory:
      type: object
      properties:
        supportCategory:
          type: integer
        budget:
          type: number

    PlanItem:
      type: object
      properties:
        supportItemGroup:
          type: integer
          example: 144
        quantity:
          type: number
          example: 10
        priceActual:
          type: number
          example: 120.22
        name:
          type: string
          example: wheelchair
        frequencyPerYear:
          type: integer
          example: 52

  responses:
    Unauthenticated:
      description: Unauthenticated
    Unauthorised:
      description: Unauthorised to access this resource
    BadRequest:
      description: Bad Request
    NotFound:
      description: Resource not found
    NoContent:
      description: No Content

  parameters:
    ParticipantId:
      name: participant_id
      in: path
      required: true
      schema:
        type: integer

    PlanId:
      name: plan_id
      in: path
      required: true
      schema:
        type: integer

    PlanCategoryId:
      name: plan_category_id
      in: path
      required: true
      schema:
        type: integer

    PlanItemId:
      name: plan_item_id
      in: path
      required: true
      schema:
        type: integer
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      